
package jadsongonzaga.organize.view;

import jadsongonzaga.organize.controller.BuscaUtilizacaoDoacaoController;
import jadsongonzaga.organize.controller.TipoServicoController;
import jadsongonzaga.organize.controller.UtilizacaoDoacaoController;
import jadsongonzaga.organize.controller.Utils;
import jadsongonzaga.organize.model.UtilizacaoDoacao;
import jadsongonzaga.organize.model.Doador;
import jadsongonzaga.organize.model.TipoServico;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author jadson
 */
public class UtilizacaoDoacaoView extends javax.swing.JDialog {

    /**
     * Creates new form AcompanhanteView
     * @param parent
     * @param modal
     */
    public UtilizacaoDoacaoView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        acao();
        initComponents();
        iniciar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBarraTarefa = new jadsongonzaga.organize.view.PanelBarraTarefa(eventos);
        panelPessoa = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtId = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jcTipoServico = new javax.swing.JComboBox<>();
        jtQuantidade = new javax.swing.JFormattedTextField();
        jtObservacao = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Utilização da doação");
        setResizable(false);

        panelPessoa.setBorder(javax.swing.BorderFactory.createTitledBorder("Utilização da doação"));
        panelPessoa.setPreferredSize(new java.awt.Dimension(706, 226));

        jLabel2.setText("Identificador");

        jLabel3.setText("Quatidade");

        jtId.setEditable(false);
        jtId.setText("jTextField1");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Tipo de servico");

        jcTipoServico.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jtQuantidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));

        jtObservacao.setText("jTextField1");

        jLabel1.setText("Observação");

        javax.swing.GroupLayout panelPessoaLayout = new javax.swing.GroupLayout(panelPessoa);
        panelPessoa.setLayout(panelPessoaLayout);
        panelPessoaLayout.setHorizontalGroup(
            panelPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPessoaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPessoaLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtId, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelPessoaLayout.createSequentialGroup()
                        .addGroup(panelPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(panelPessoaLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelPessoaLayout.createSequentialGroup()
                                .addComponent(jcTipoServico, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jtObservacao))
                        .addGap(0, 93, Short.MAX_VALUE))))
        );
        panelPessoaLayout.setVerticalGroup(
            panelPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPessoaLayout.createSequentialGroup()
                .addGroup(panelPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcTipoServico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtObservacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(86, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBarraTarefa, javax.swing.GroupLayout.PREFERRED_SIZE, 757, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(panelPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 745, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelBarraTarefa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelPessoa, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UtilizacaoDoacaoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UtilizacaoDoacaoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UtilizacaoDoacaoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UtilizacaoDoacaoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>



        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UtilizacaoDoacaoView dialog = new UtilizacaoDoacaoView(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JComboBox<String> jcTipoServico;
    private javax.swing.JTextField jtId;
    private javax.swing.JTextField jtObservacao;
    private javax.swing.JFormattedTextField jtQuantidade;
    private jadsongonzaga.organize.view.PanelBarraTarefa panelBarraTarefa;
    private javax.swing.JPanel panelPessoa;
    // End of variables declaration//GEN-END:variables

    
    UtilizacaoDoacaoController controller = new UtilizacaoDoacaoController();
    UtilizacaoDoacao utilizacao;
    private boolean novo = true;
    Doador doador;

    private void iniciar() {

        modoInicial();

    }


    private UtilizacaoDoacao getUtilizacaoDoacao() {
        UtilizacaoDoacao utd = new UtilizacaoDoacao();
        if(!jtId.getText().isEmpty())
            utd.setId(Integer.parseInt(jtId.getText()));
       utd.setObservacao(jtObservacao.getText());
       utd.setQuantidade(Utils.paraBigDecimal(jtQuantidade.getText()));
       utd.setTipoServico((TipoServico) jcTipoServico.getSelectedItem());
               
       
        
        return utd;
    }
    
    private void setUtilizacaoDoacao(UtilizacaoDoacao ud) {
  
        jtId.setText(String.valueOf(ud.getId()));
        jtQuantidade.setText(Utils.paraString(ud.getQuantidade()));
        jcTipoServico.setSelectedItem(ud.getTipoServico());
        jtObservacao.setText(ud.getObservacao());
    }
    
    private void carregarDados(int id){
        utilizacao = controller.obter(id);
        setUtilizacaoDoacao(utilizacao);
        
    }

    private void evtNovo() {
        UtilsView.limpaComponentes(panelPessoa);
    
        UtilsView.habilitaComponentes(panelPessoa, true);
        jcTipoServico.grabFocus();
       
    }
    
    private void modoInicial() {
        UtilsView.limpaComponentes(panelPessoa);
        jcTipoServico.grabFocus();
        UtilsView.habilitaComponentes(panelPessoa, false);
        carregaComboTD();
        novo = true;
    }
    
    private void modoEditar() {
        
        UtilsView.habilitaComponentes(panelPessoa, true);
        jcTipoServico.grabFocus();
    }

    EventosBarraTarefar eventos;

    private void acao() {
        eventos = new EventosBarraTarefar() {
            @Override
            public boolean salvar() {
         
                List<ComponenteInfo> componentes = new LinkedList<>();

                componentes.add(new ComponenteInfo(jcTipoServico, "Tipo do serviço"));
                componentes.add(new ComponenteInfo(jtQuantidade, "Quantidade"));

                if(UtilsView.validaCamposObrigatorios(componentes)){
                    utilizacao = getUtilizacaoDoacao();

                    controller.salvar(utilizacao, novo);
                    modoInicial();
                    setUtilizacaoDoacao(utilizacao);
                    return true;
                }

                return false;
                
            }

            @Override
            public void novo() {
                evtNovo();
            }

            @Override
            public void cancelar() {
                modoInicial();
            }

            @Override
            public void editar() {
                modoEditar();
                novo = false;
            }

            @Override
            public boolean excluir() {
                int op = JOptionPane.showConfirmDialog(null, "Deseja realmente excluir o registro: "+ utilizacao);
                if(op == 0){
                    controller.excluir(utilizacao);
                    modoInicial();
                }
                return op == 0;
            }

            @Override
            public void pesquisar() {
                evtPesquisar();
            }

            @Override
            public void confirmar() {

            }
        };
    }
    
    private void evtPesquisar(){
        BuscaUtilizacaoDoacaoController busca = new BuscaUtilizacaoDoacaoController();
        
        Buscar buscar = new Buscar(null, true, busca.getBuscaController());
        buscar.setVisible(true);
        int id = buscar.getId();
        if(id > 0){
            modoInicial();
            carregarDados(id);
        }
    }

 

    private void carregaComboTD(){
        TipoServicoController tipo = new  TipoServicoController();
        jcTipoServico.setModel(tipo.obterModelCombo());
    }
    
    
}
